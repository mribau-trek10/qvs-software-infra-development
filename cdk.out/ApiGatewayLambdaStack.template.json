{
 "Resources": {
  "OrderingConnectorDFBA35DA": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "BodyS3Location": {
     "Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "Key": "05039561121d7d3934e7a3192f020d256262dc2d472067175211425b25f52378.json"
    },
    "Name": "OrderingConnector"
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/OrderingConnector/Resource",
    "aws:asset:path": "asset.05039561121d7d3934e7a3192f020d256262dc2d472067175211425b25f52378.json",
    "aws:asset:property": "BodyS3Location"
   }
  },
  "OrderingConnectorv1orderproduct8CDEA930": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "OrderingConnectorDFBA35DA",
      "RootResourceId"
     ]
    },
    "PathPart": "v1-order-product",
    "RestApiId": {
     "Ref": "OrderingConnectorDFBA35DA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/OrderingConnector/Default/v1-order-product/Resource"
   }
  },
  "OrderingConnectorv1orderproductPOSTApiPermissionApiGatewayLambdaStackOrderingConnectorDCD9280EPOSTv1orderproduct562529A5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaFunctionBF21E41F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OrderingConnectorDFBA35DA"
       },
       "/",
       {
        "Ref": "OrderingConnectorDeploymentStageprod382354E8"
       },
       "/POST/v1-order-product"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/OrderingConnector/Default/v1-order-product/POST/ApiPermission.ApiGatewayLambdaStackOrderingConnectorDCD9280E.POST..v1-order-product"
   }
  },
  "OrderingConnectorv1orderproductPOSTApiPermissionTestApiGatewayLambdaStackOrderingConnectorDCD9280EPOSTv1orderproduct9DE7FA57": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaFunctionBF21E41F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OrderingConnectorDFBA35DA"
       },
       "/test-invoke-stage/POST/v1-order-product"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/OrderingConnector/Default/v1-order-product/POST/ApiPermission.Test.ApiGatewayLambdaStackOrderingConnectorDCD9280E.POST..v1-order-product"
   }
  },
  "OrderingConnectorv1orderproductPOSTE6E34647": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "Credentials": {
      "Fn::GetAtt": [
       "APIGatewayExecutionRole6FB6ED92",
       "Arn"
      ]
     },
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LambdaFunctionBF21E41F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "OrderingConnectorv1orderproduct8CDEA930"
    },
    "RestApiId": {
     "Ref": "OrderingConnectorDFBA35DA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/OrderingConnector/Default/v1-order-product/POST/Resource"
   }
  },
  "OrderingConnectorv1orderproductOPTIONSCF554AC4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "WHEN_NO_MATCH",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "OrderingConnectorv1orderproduct8CDEA930"
    },
    "RestApiId": {
     "Ref": "OrderingConnectorDFBA35DA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/OrderingConnector/Default/v1-order-product/OPTIONS/Resource"
   }
  },
  "OrderingConnectorCloudWatchRoleE6FEEF5F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/OrderingConnector/CloudWatchRole/Resource"
   }
  },
  "OrderingConnectorAccount460F08B6": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "OrderingConnectorCloudWatchRoleE6FEEF5F",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "OrderingConnectorDFBA35DA"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/OrderingConnector/Account"
   }
  },
  "OrderingConnectorDeploymentF658A69D71f9be9f3c72441f8b26ae58abb19a00": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "OrderingConnectorDFBA35DA"
    }
   },
   "DependsOn": [
    "OrderingConnectorv1orderproductOPTIONSCF554AC4",
    "OrderingConnectorv1orderproductPOSTE6E34647",
    "OrderingConnectorv1orderproduct8CDEA930"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/OrderingConnector/Deployment/Resource"
   }
  },
  "OrderingConnectorDeploymentStageprod382354E8": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "OrderingConnectorDeploymentF658A69D71f9be9f3c72441f8b26ae58abb19a00"
    },
    "RestApiId": {
     "Ref": "OrderingConnectorDFBA35DA"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "OrderingConnectorAccount460F08B6"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/OrderingConnector/DeploymentStage.prod/Resource"
   }
  },
  "LambdaFunctionServiceRoleC555A460": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/LambdaFunction/ServiceRole/Resource"
   }
  },
  "LambdaFunctionServiceRoleDefaultPolicy32EEEE35": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "execute-api:Invoke",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaFunctionServiceRoleDefaultPolicy32EEEE35",
    "Roles": [
     {
      "Ref": "LambdaFunctionServiceRoleC555A460"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/LambdaFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LambdaFunctionBF21E41F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6416ae7ed490558bba2411bafe3a0d5343cfd80b28b4d3885cd80cd06be90ee4.zip"
    },
    "Handler": "lambda.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "LambdaFunctionServiceRoleC555A460",
      "Arn"
     ]
    },
    "Runtime": "python3.8"
   },
   "DependsOn": [
    "LambdaFunctionServiceRoleDefaultPolicy32EEEE35",
    "LambdaFunctionServiceRoleC555A460"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/LambdaFunction/Resource",
    "aws:asset:path": "asset.6416ae7ed490558bba2411bafe3a0d5343cfd80b28b4d3885cd80cd06be90ee4",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "APIGatewayExecutionRole6FB6ED92": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/APIGatewayExecutionRole/Resource"
   }
  },
  "APIGatewayExecutionRoleDefaultPolicyEA37CF21": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "LambdaFunctionBF21E41F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LambdaFunctionBF21E41F",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "APIGatewayExecutionRoleDefaultPolicyEA37CF21",
    "Roles": [
     {
      "Ref": "APIGatewayExecutionRole6FB6ED92"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/APIGatewayExecutionRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WPzWrDMBCEnyV3WSkJFHJ0UnorNe4DhI28dbfWH5ZEMMbvnpXVtM1pvhmW3Z2dPOzk0wauoVLdUGm6yPkjghoER+cZPPUQ8QoTxx5ViyHWnsTp096R1aVR4REC/pqfgcJvGL9cl6M/qpVyyUbxgl67ySAjp/8cP9Gva1ZYRNifIQSMQdZZ2MtjUgPG9a4Gc+lAzjzf4GgoBHJWvCarYgaO77wIAiPn1unyZNbGaVJTtoWWRaxH8mmy/UOr9xR9ig/9mE/OdlTWNxN3tNu9PMjnzXcgqkYuSgZlW/QGlW5cjXMBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ApiGatewayLambdaStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "OrderingConnectorEndpoint70B8FE9A": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "OrderingConnectorDFBA35DA"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "OrderingConnectorDeploymentStageprod382354E8"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}